Question:Give an example of when a parahen a pmeter should be a reference type. Give an example of when
a parameter should not be a reference.

1:Functions must use reference parameters to operate on objects of a type that cannot be copied.

2:Functions prefer to use reference parameters to operate on objects of large class types or large containers.

3:Functions should use reference parameters to return additional information via the reference parameters.

void printStr(std::ostream &os, const std::string &str, bool &stat) { if (os << str) stat = true; else stat = false; }

Nonreference parameters

1:Functions should use nonreference parameters when the value of the parameters may changed but should not affect the objects passed to the function.

int sum(int n) { int sum = 0; while (n > 0) sum += n--; return sum; }

(
Note:
A container is a holder object that stores a collection of other objects (its elements). They are implemented as class templates, which allows a great flexibility in the types supported as elements.(Not an array)

The container manages the storage space for its elements and provides member functions to access them, either directly or through iterators (reference objects with similar properties to pointers).
)